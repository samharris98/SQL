# For this project, I downloaded Spotify data from Kaggle.
# I then created a table to insert the Spotify data into.
# Next, I performed analytics on the data using SQL.

#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Following this, I inserted the Spotify data .csv into the table.

#Finally, I explored the data using SQL.

#First, I wanted to see what the average danceability looked like for each artist.
SELECT artist_name, AVG(danceability) AS avg_danceability
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

#Second, I wanted to find out what the most popular song was.
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 1;

#Next, I wanted to dive a bit further into popularity, and I wanted to find the top 10 artists with the highest average for popularity of their tracks.
SELECT artist_name, AVG (popularity) AS avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC
LIMIT 10;

#Following this, I wanted to pivot and look at songs with the highest danceability and energy combination.
SELECT track_name, artist_name, danceability, energy, popularity
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC, energy DESC
LIMIT 15;

#I wanted to be specific, and ran a query to find tracks that are both high in danceability (above 0.8) BUT also low in acousticness (below 0.2) and calculate the average popularity.
SELECT artist_name, track_name, AVG (popularity) AS avg_popularity
FROM BIT_DB.Spotifydata
WHERE danceability > 0.8
AND acousticness < 0.2;

#Finally, I wanted to look at four of the biggest pop artists, and see if there was any correlation between energy and popularity for them.
SELECT artist_name, energy, popularity
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Doja Cat'
OR artist_name = 'Ariana Grande'
OR artist_name = 'Olivia Rodrigo'
OR artist_name = 'Dua Lipa'
ORDER BY popularity DESC;
